name: fadi_ci
on: [push]
jobs:
  k8s:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s: [v1.17.0]
    steps:
    - name: Ready minikube
      uses: manusa/actions-setup-minikube@v1.1.0
      with:
        minikube version: 'v1.12.0'
        kubernetes version: ${{ matrix.k8s }}
        start args: '--addons=ingress'
    - run: kubectl get nodes
    - name: Ready helm
      run: |
        wget https://get.helm.sh/helm-v3.1.0-linux-amd64.tar.gz && tar -zxvf helm-v3.1.0-linux-amd64.tar.gz && sudo mv linux-amd64/helm /usr/local/bin/helm
        helm version
    - uses: actions/checkout@v1
    - name: configure context
      run: kubectl config set-context minikube
    - name: check addons
      run: minikube addons list
    - name: Install FADI
      run: cd ./helm && ./deploy.sh
    - name: Configure namespace
      run: kubectl config set-context minikube --namespace fadi
    - name: Check pods
      run: kubectl get pods
    - name: Check deployments
      run: kubectl get deployments
    - name: Check fadi-adminer deployment status
      run: kubectl rollout status deployment fadi-adminer
    - name: Check fadi-grafana deployment status
      run: kubectl rollout status deployment fadi-grafana
    - name: Check fadi-nifi deployment status
      run: kubectl wait --for=condition=Ready pod/fadi-nifi-0 --timeout=10m
    - name: Check the accessibility of adminer service
      run: export ADMINER_URL = "$(minikube service -n fadi fadi-adminer --url)"
    - name: Check the accessibility of grafana service
      run: export GRAFANA_URL = "$(minikube service -n fadi fadi-grafana --url)"      
    - name: Check the accessibility of nifi service
      run: export NIFI_URL = "$(minikube service -n fadi fadi-nifi --url)"
    - name: launch function tests
      run: cd ./tests && npm run test