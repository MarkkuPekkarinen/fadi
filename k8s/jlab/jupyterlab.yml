apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyter-notebook-config
data:
  jupyter_notebook_config.py: |
    c.NotebookApp.password = 'sha1:d068cd2f5559:da3d8658c5d3b743b2cea67e4a141a9aba22773f'
    c.NotebookApp.ip = '0.0.0.0'
    c.NotebookApp.open_browser = False
    c.NotebookApp.port = 9999
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jupyter
  labels:
    app: jupyter
  annotations:
    openshift.io/image.insecureRepository: "true"
spec:
  selector:
    matchLabels:
      app: jupyter
  template:
    metadata:
      name: jupyter
      labels:
        app: jupyter
    spec:
      containers:
      - name: jupyter
        image: nexus.ext.cetic.be:8083/cetic/bdf-jlab
      #  imagePullPolicy: Never
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: postgres-config
        volumeMounts:
          - name: config-vol
            mountPath: /home/jovyan/.jupyter
          - name: notebooks-vol
            mountPath: /home/jovyan/.script
      imagePullSecrets:
      - name: docker-creds
      volumes:
        - name: config-vol
          configMap:
            name: jupyter-notebook-config
            items:
              - key: jupyter_notebook_config.py
                path: jupyter_notebook_config.py
        - name: notebooks-vol
          configMap:
            name: example-dataset
            items:
              - key: MicoMegaDynamicsFormat.py
                path: MicoMegaDynamicsFormat.py
      #status:
      #  dockerImageRepository: nexus.ext.cetic.be:8083
---
kind: Service
apiVersion: v1
metadata:
  name: jupyter
spec:
  selector:
    app: jupyter
  ports:
    - port: 9999
  type: NodePort
